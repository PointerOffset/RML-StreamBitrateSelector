name: RML Build Release

on:
  workflow_dispatch:

jobs:
  build_job:
    runs-on: ubuntu-latest
    env:
      STEAM_USERNAME: ${{ secrets.STEAMUSER }}
      STEAM_PASSWORD: ${{ secrets.STEAMPASS }}
      RESONITE_DIR: ${{ github.workspace }}/ResoniteInstall
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Set Resonite Include Paths
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: >-
          <PropertyGroup Condition="'\$\(.+?\)'.+?''">(.|\n)*?<\/PropertyGroup>
        replace: >-
          <PropertyGroup><ResonitePath>$RESONITE_DIR</ResonitePath></PropertyGroup>
        include: "*.csproj"

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Install Mono
      run: sudo apt-get install -y mono-devel

    - name: Setup steamcmd
      uses: CyberAndrii/setup-steamcmd@v1

    - name: Install Resonite
      run: mkdir $RESONITE_DIR && steamcmd +@sSteamCmdForcePlatformType windows +force_install_dir $RESONITE_DIR +login $STEAM_USERNAME $STEAM_PASSWORD +app_license_request 2519830 +app_update 2519830 validate +quit
    
    - name: Download Latest RML
      uses: robinraju/release-downloader@v1.8
      with:
        repository: "resonite-modding-group/ResoniteModLoader"
        latest: true
        fileName: "*.dll"
        out-file-path: "rmldl"

    - name: Setup RML Directories
      run: mkdir $RESONITE_DIR/rml_libs && mkdir $RESONITE_DIR/rml_mods && ls -al $RESONITE_DIR

    - name: Copy RML Files
      run: cp ./rmldl/0Harmony.dll $RESONITE_DIR/rml_libs/0Harmony.dll && cp ./rmldl/ResoniteModLoader.dll $RESONITE_DIR/Libraries/ResoniteModLoader.dll

    - name: Build
      run: dotnet build --configuration Release
    
    - name: Upload Mod Artifact
      uses: actions/upload-artifact@v3
      with:
        name: StreamBitrateSelector.dll
        path: ./bin/Release/net472/StreamBitrateSelector.dll

  release_job:
    needs: build_job
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Get Binary
        uses: actions/download-artifact@v3
        with:
          name: StreamBitrateSelector.dll

      - name: Get the latest tag
        id: get-latest-tag
        run: |
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: StreamBitrateSelector.dll
          tag_name: $LATEST_TAG